{"version":3,"sources":["components/Navlink.js","components/Navbar.js","components/Home.js","components/About.js","components/Register.js","components/Login.js","components/BoundingBox.js","components/BoundingBoxes.js","components/Faceblur.js","components/Footer.js","actions/actions.js","components/App.js","reducers/countReducer.js","reducers/nameReducer.js","reducers/inputReducer.js","reducers/registerNameReducer.js","reducers/registerEmailReducer.js","reducers/registerPasswordReducer.js","reducers/imageURLReducer.js","reducers/faceDataReducer.js","reducers/imageDimensionsReducer.js","reducers/radioOptionReducer.js","reducers/rootReducer.js","index.js","credentials.js"],"names":["Navlink","_ref","name","react_default","a","createElement","className","react_router_dom","to","concat","Navbar","components_Navlink","Home","React","Component","About","Register","handleRegisterSubmit","handleRegisterNameChange","handleRegisterEmailChange","handleRegisterPasswordChange","registerNameQuery","useSelector","state","registerName","registerEmailQuery","registerEmail","registerPasswordQuery","registerPassword","onSubmit","type","value","onChange","placeholder","Login","BoundingBox","newStyle","bound","_React$useState","useState","_React$useState2","Object","slicedToArray","toggleState","setToggleState","_React$useState3","border","_React$useState4","detectStyle","setDetectStyle","_React$useState5","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundSize","borderRadius","filter","_React$useState6","blurStyle","setBlurStyle","_React$useState7","backgroundColor","_React$useState8","pitchStyle","setPitchStyle","imageHeight","imageDimensions","height","imageWidth","width","boxDimensions","top","top_row","left","left_col","bottom","bottom_row","right","right_col","boxStyle","radioOption","console","log","style","objectSpread","onClick","BoundingBoxes","boundingBoxes","boxesStyle","map","boundingBox","id","components_BoundingBox","key","renderBoxes","Faceblur","handleSubmit","handleChange","input","imageURL","faceData","face","region_info","bounding_box","role","aria-label","checked","src","alt","components_BoundingBoxes","Footer","href","target","rel","registerNameChange","payload","registerEmailChange","email","registerPasswordChange","password","app","Clarifai","App","apiKey","API_KEY","dispatch","useDispatch","event","preventDefault","models","predict","FACE_DETECT_MODEL","then","response","outputs","data","regions","formattedFaceData","image","document","getElementById","changeImageDimensions","error","radios","querySelector","clearRegisterQueries","components_Navbar","react_router","exact","path","component","render","props","components_Register","assign","components_Faceblur","components_Footer","countReducer","arguments","length","undefined","nameReducer","action","inputReducer","registerNameReducer","registerEmailReducer","registerPasswordReducer","imageURLReducer","faceDataReducer","imageDimensionsReducer","radioOptionReducer","rootReducer","combineReducers","count","store","createStore","ReactDOM","es","components_App","module","exports"],"mappings":"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","file":"static/js/main.0643ef09.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/Navlink.scss';\r\n\r\n// We are passing in a name prop which will also determine how the links work.\r\nconst Navlink = function({ name }) {\r\n\treturn (\r\n\t\t<div className=\"Navlink\">\r\n\t\t\t<Link to={`/${name}`} className=\"Navlink__link\">{`${name}`}</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Navlink;\r\n","// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import '../stylesheets/Navbar.css';\r\n\r\n// // Should turn the parts with the link into specific button component. That would be nice and reuseable.\r\n\r\n// classNameName Navbar extends React.Component {\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<nav classNameName=\"navbar\">\r\n// \t\t\t\t<div classNameName=\"navbar__logo\">\r\n// \t\t\t\t\t{/* Some logo should go here */}\r\n// \t\t\t\t\t<h1 classNameName=\"navbar__logo--title\">faceblur: Anonymize Photos</h1>\r\n// \t\t\t\t</div>\r\n\r\n// \t\t\t\t<div classNameName=\"navbar__link-container\">\r\n// \t\t\t\t\t<ul classNameName=\"navbar__link-list\">\r\n// \t\t\t\t\t\t<li classNameName=\"navbar__link-list-item\">\r\n// \t\t\t\t\t\t\t<Link to=\"/\" classNameName=\"navbar__link\">\r\n// \t\t\t\t\t\t\t\tHome\r\n// \t\t\t\t\t\t\t</Link>\r\n// \t\t\t\t\t\t</li>\r\n// \t\t\t\t\t\t<li classNameName=\"navbar__link-list-item\">\r\n// \t\t\t\t\t\t\t<Link to=\"/register\" classNameName=\"navbar__link\">\r\n// \t\t\t\t\t\t\t\tRegister\r\n// \t\t\t\t\t\t\t</Link>\r\n// \t\t\t\t\t\t</li>\r\n// \t\t\t\t\t\t<li classNameName=\"navbar__link-list-item\">\r\n// \t\t\t\t\t\t\t<Link to=\"/signin\" classNameName=\"navbar__link\">\r\n// \t\t\t\t\t\t\t\tSignin\r\n// \t\t\t\t\t\t\t</Link>\r\n// \t\t\t\t\t\t</li>\r\n// \t\t\t\t\t\t<li classNameName=\"navbar__link-list-item\">\r\n// \t\t\t\t\t\t\t<Link to=\"/faceblur\" classNameName=\"navbar__link\">\r\n// \t\t\t\t\t\t\t\tFaceblur\r\n// \t\t\t\t\t\t\t</Link>\r\n// \t\t\t\t\t\t</li>\r\n// \t\t\t\t\t</ul>\r\n// \t\t\t\t</div>\r\n// \t\t\t</nav>\r\n// \t\t);\r\n// \t}\r\n// }\r\n\r\n// export default Navbar;\r\n\r\nimport React from 'react';\r\nimport '../stylesheets/Navbar.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Navlink from './Navlink';\r\n\r\nconst Navbar = function() {\r\n\treturn (\r\n\t\t<header className=\"Navbar\">\r\n\t\t\t<section className=\"logo-box\">\r\n\t\t\t\t<Link to=\"/Home\" className=\"logo-link\">\r\n\t\t\t\t\t<div className=\"logo-icon\" />\r\n\t\t\t\t\t<div className=\"logo-name\">faceblur</div>\r\n\t\t\t\t</Link>\r\n\t\t\t</section>\r\n\r\n\t\t\t<section className=\"navigation-box\">\r\n\t\t\t\t<div className=\"navigation-link\">\r\n\t\t\t\t\t<Navlink name=\"Home\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"navigation-link\">\r\n\t\t\t\t\t<Navlink name=\"About\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* We will need to conditionally render based on login state. Get this from useSelector. */}\r\n\t\t\t\t<div className=\"navigation-link\">\r\n\t\t\t\t\t<Navlink name=\"Register\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"navigation-link\">\r\n\t\t\t\t\t<Navlink name=\"Login\" />\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport '../stylesheets/Home.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<main className=\"Home\">\r\n\t\t\t\t<div className=\"display\">\r\n\t\t\t\t\t<div className=\"display__box\">\r\n\t\t\t\t\t\t<h1 className=\"display__box--description\">\r\n\t\t\t\t\t\t\tCome and Anonymize Your Photos with Machine Learning and AI\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t{/* Seems like the pathing doesn't like absolute root start. */}\r\n\t\t\t\t\t\t{/* <img src=\"img/blur.jpg\" /> */}\r\n\t\t\t\t\t\t{/* <Button destination=\"register\" text=\"Sign Up Today!\" /> */}\r\n\t\t\t\t\t\t{/* Remember a link tag is basically the same thing as a anchor tag. */}\r\n\t\t\t\t\t\t<Link to=\"/Faceblur\" className=\"display__box--button\">\r\n\t\t\t\t\t\t\tTry It Now!\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst About = function() {\r\n\treturn <div className=\"About\">About Linkage</div>;\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Register = function({\r\n\thandleRegisterSubmit,\r\n\thandleRegisterNameChange,\r\n\thandleRegisterEmailChange,\r\n\thandleRegisterPasswordChange\r\n}) {\r\n\tconst registerNameQuery = useSelector((state) => state.registerName);\r\n\tconst registerEmailQuery = useSelector((state) => state.registerEmail);\r\n\tconst registerPasswordQuery = useSelector((state) => state.registerPassword);\r\n\r\n\treturn (\r\n\t\t<div className=\"Register\">\r\n\t\t\t<h1>Something register</h1>\r\n\t\t\t<form onSubmit={handleRegisterSubmit}>\r\n\t\t\t\t<div className=\"form__field\">\r\n\t\t\t\t\t<label className=\"form__label\">Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={registerNameQuery}\r\n\t\t\t\t\t\tonChange={handleRegisterNameChange}\r\n\t\t\t\t\t\tplaceholder=\"name\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__field\">\r\n\t\t\t\t\t<label className=\"form__label\">Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={registerEmailQuery}\r\n\t\t\t\t\t\tonChange={handleRegisterEmailChange}\r\n\t\t\t\t\t\tplaceholder=\"email\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__field\">\r\n\t\t\t\t\t<label className=\"form__label\">Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={registerPasswordQuery}\r\n\t\t\t\t\t\tonChange={handleRegisterPasswordChange}\r\n\t\t\t\t\t\tplaceholder=\"password\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button type=\"submit\">REGISTER &rarr;</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nclass Login extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Login</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../stylesheets/BoundingBox.scss';\r\n\r\nconst BoundingBox = function({ bound }) {\r\n\t// Here we need to have state values for detect, blur, and pitch values and use a set state on click.\r\n\r\n\t// 1 should mean active state.\r\n\t// Wait is this state specific to this component? Meaning are there multiple state values for each bounding box? Hope so.\r\n\tconst [ toggleState, setToggleState ] = React.useState(1);\r\n\r\n\tconst [ detectStyle, setDetectStyle ] = React.useState({\r\n\t\tborder: '.3rem solid black'\r\n\t});\r\n\r\n\tconst [ blurStyle, setBlurStyle ] = React.useState({\r\n\t\tbackgroundImage: 'url(/img/blur.jpg)',\r\n\t\tbackgroundRepeat: 'no-repeat',\r\n\t\tbackgroundAttachment: 'fixed',\r\n\t\tbackgroundSize: 'cover',\r\n\t\tborderRadius: '50%',\r\n\t\tfilter: 'blur(.3rem)'\r\n\t});\r\n\r\n\tconst [ pitchStyle, setPitchStyle ] = React.useState({\r\n\t\tbackgroundColor: 'black',\r\n\t\tborderRadius: '50%'\r\n\t});\r\n\r\n\tconst imageHeight = useSelector((state) => state.imageDimensions.height);\r\n\tconst imageWidth = useSelector((state) => state.imageDimensions.width);\r\n\r\n\tconst top = bound.top_row * imageHeight;\r\n\tconst left = bound.left_col * imageWidth;\r\n\tconst bottom = bound.bottom_row * imageHeight;\r\n\tconst right = bound.right_col * imageWidth;\r\n\r\n\tconst boxDimensions = {\r\n\t\ttop,\r\n\t\tleft,\r\n\t\tbottom,\r\n\t\tright\r\n\t};\r\n\r\n\tlet boxStyle = {\r\n\t\ttop: boxDimensions.top,\r\n\t\tleft: boxDimensions.left,\r\n\t\tbottom: boxDimensions.bottom,\r\n\t\tright: boxDimensions.right,\r\n\t\theight: boxDimensions.bottom - boxDimensions.top,\r\n\t\twidth: boxDimensions.right - boxDimensions.left\r\n\t};\r\n\r\n\tconst radioOption = useSelector((state) => state.radioOption);\r\n\r\n\t// What if I define the blur style and everything else inside of here and change the value based on that?\r\n\r\n\t// const detectStyle = {\r\n\t// \tborder: '.3rem solid black'\r\n\t// };\r\n\r\n\t// const blurStyle = {\r\n\t// \tbackgroundImage: 'url(/img/blur.jpg)',\r\n\t// \tbackgroundRepeat: 'no-repeat',\r\n\t// \tbackgroundAttachment: 'fixed',\r\n\t// \tbackgroundSize: 'cover',\r\n\t// \tborderRadius: '50%',\r\n\t// \tfilter: 'blur(.3rem)'\r\n\t// };\r\n\r\n\t// const pitchStyle = {\r\n\t// \tbackgroundColor: 'black',\r\n\t// \tborderRadius: '50%'\r\n\t// };\r\n\r\n\tconst clickBox = function() {\r\n\t\tconsole.log('the bounding box was clicked');\r\n\t\tconsole.log(`radio option is ${radioOption} and ${typeof radioOption}`);\r\n\r\n\t\t// OKAY SO NOW WE USE STATE INSTEAD TO RENDER CORRECTLY.\r\n\t\tif (radioOption === 'detect') {\r\n\t\t\tif (toggleState === 1) {\r\n\t\t\t\tsetToggleState(0);\r\n\t\t\t\tsetDetectStyle({});\r\n\t\t\t} else {\r\n\t\t\t\tsetToggleState(1);\r\n\t\t\t\tsetDetectStyle({\r\n\t\t\t\t\tborder: '.3rem solid black'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (radioOption === 'blur') {\r\n\t\t\tif (toggleState === 1) {\r\n\t\t\t\tsetToggleState(0);\r\n\t\t\t\tsetBlurStyle({});\r\n\t\t\t} else {\r\n\t\t\t\tsetToggleState(1);\r\n\t\t\t\tsetBlurStyle({\r\n\t\t\t\t\tbackgroundImage: 'url(/img/blur.jpg)',\r\n\t\t\t\t\tbackgroundRepeat: 'no-repeat',\r\n\t\t\t\t\tbackgroundAttachment: 'fixed',\r\n\t\t\t\t\tbackgroundSize: 'cover',\r\n\t\t\t\t\tborderRadius: '50%',\r\n\t\t\t\t\tfilter: 'blur(.3rem)'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (radioOption === 'pitch') {\r\n\t\t\tif (toggleState === 1) {\r\n\t\t\t\tsetToggleState(0);\r\n\t\t\t\tsetPitchStyle({});\r\n\t\t\t} else {\r\n\t\t\t\tsetToggleState(1);\r\n\t\t\t\tsetPitchStyle({\r\n\t\t\t\t\tbackgroundColor: 'black',\r\n\t\t\t\t\tborderRadius: '50%'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log('SOMETHING WENT WRONG WITH SETTING STATE!');\r\n\t\t}\r\n\r\n\t\t// switch (radioOption) {\r\n\t\t// \tcase 'detect':\r\n\t\t// \t\ttoggleStyle = {\r\n\t\t// \t\t\tborder: '.3rem solid white',\r\n\t\t// \t\t\tbackgroundColor: 'green'\r\n\t\t// \t\t};\r\n\t\t// \tcase 'blur':\r\n\t\t// \t\ttoggleStyle = {\r\n\t\t// \t\t\t// Might be a syntax issue here\r\n\t\t// \t\t\tfilter: 'blur(1.5rem)',\r\n\t\t// \t\t\tbackgroundColor: 'orange'\r\n\t\t// \t\t};\r\n\t\t// \tcase 'pitch':\r\n\t\t// \t\ttoggleStyle = {\r\n\t\t// \t\t\tbackgroundColor: 'black'\r\n\t\t// \t\t};\r\n\t\t// \tdefault:\r\n\t\t// \t\tconsole.log('something went wrong!');\r\n\t\t// }\r\n\r\n\t\t// if (radioOption === 'detect') {\r\n\t\t// \tconsole.log('detect triggers');\r\n\t\t// \tboxStyle = { ...boxStyle };\r\n\t\t// \tconsole.log(boxStyle);\r\n\t\t// } else if (radioOption === 'blur') {\r\n\t\t// \tconsole.log('blur triggers');\r\n\t\t// } else {\r\n\t\t// \tconsole.log('pitch triggers');\r\n\t\t// }\r\n\t};\r\n\r\n\t// On possible solution is to make the whole boxStyle into a stateful object. I don't understand why applying these inline styles is not working....\r\n\r\n\t// A big problem that may occur is that the responsive design of the display box changes the actual dimensions of the image. This makes the calculations inaccurate. This is in css so I don't have a way of checking the dimensions.\r\n\t// Perhaps I could select the dom element of the faceblur container. That's beyond the scope though.\r\n\r\n\t// Alright so the goal now is to configure the on click toggle for each radio option.\r\n\r\n\t// console.log(boxStyle);\r\n\r\n\tlet newStyle;\r\n\r\n\tif (radioOption === 'detect') {\r\n\t\tnewStyle = detectStyle;\r\n\t} else if (radioOption === 'blur') {\r\n\t\tnewStyle = blurStyle;\r\n\t} else if (radioOption === 'pitch') {\r\n\t\tnewStyle = pitchStyle;\r\n\t} else {\r\n\t\tconsole.log('SOMETHING WENT WRONG WITH ASSIGNMENT!');\r\n\t}\r\n\r\n\treturn <div className=\"BoundingBox\" style={{ ...boxStyle, ...newStyle }} onClick={clickBox} />;\r\n\t// Okay so the inline thing does work. I just need to figure out how the onClick listener works.\r\n};\r\n\r\nexport default BoundingBox;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport BoundingBox from './BoundingBox';\r\nimport '../stylesheets/BoundingBoxes.scss';\r\n\r\n// boundingBoxes is the array of objects that define the\r\nconst BoundingBoxes = function({ boundingBoxes }) {\r\n\t// console.log(`the bounding boxes are currently ${boundingBoxes}`);\r\n\r\n\tconst renderBoxes = function(boundingBoxes) {\r\n\t\treturn boundingBoxes.map((boundingBox, id) => {\r\n\t\t\treturn <BoundingBox key={id} bound={boundingBox} />;\r\n\t\t});\r\n\t};\r\n\r\n\tconst imageHeight = useSelector((state) => state.imageDimensions.height);\r\n\tconst imageWidth = useSelector((state) => state.imageDimensions.width);\r\n\r\n\tconst boxesStyle = {\r\n\t\theight: imageHeight,\r\n\t\twidth: imageWidth\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"BoundingBoxes\" style={boxesStyle}>\r\n\t\t\t{renderBoxes(boundingBoxes)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BoundingBoxes;\r\n","// import React from 'react';\r\n// import '../stylesheets/Faceblur.css';\r\n\r\n// class Faceblur extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <main class=\"Faceblur\">\r\n//         <h1>This is the main faceblur component page that we show.</h1>\r\n\r\n//         <form onSubmit={}>\r\n//           <input type=\"text\" onChange={} value={} />\r\n//           <label>Submit Image</label>\r\n//         </form>\r\n//       </main>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Faceblur;\r\n\r\nimport React from 'react';\r\nimport BoundingBoxes from './BoundingBoxes';\r\nimport { useSelector } from 'react-redux';\r\nimport '../stylesheets/Faceblur.scss';\r\n\r\nconst Faceblur = function({ handleSubmit, handleChange }) {\r\n\tconst input = useSelector((state) => state.input);\r\n\tconst imageURL = useSelector((state) => state.imageURL);\r\n\tconst faceData = useSelector((state) => state.faceData);\r\n\tconsole.log(faceData);\r\n\tconst boundingBoxes = faceData.map((face) => {\r\n\t\treturn face.region_info.bounding_box;\r\n\t});\r\n\t// console.log(\r\n\t// \t`expect bounding boxes to be an array of object containing only the boundary objects of ${boundingBoxes}`\r\n\t// );\r\n\t// console.log(boundingBoxes);\r\n\r\n\tconst radioOption = useSelector((state) => state.radioOption);\r\n\r\n\t// So think about this clearly... Whenever the faceblur component rerenders it accesses the state from redux and uses that to render the radio buttons. We need this because there has to be a default and I want it to save. So to start with debugging let's just check if the state values are accurate.\r\n\r\n\t// Doesn't work. The current problem is that any input change reverts back and clears everything. Check the action for input change. The other problem could be that rendering the input part needs to be in its own component. Probably not though.\r\n\r\n\tconsole.log(`the current radio option is ${radioOption}`);\r\n\r\n\tconst renderDetect = function() {\r\n\t\tif (radioOption === 'detect') {\r\n\t\t\treturn <input type=\"radio\" name=\"choice\" value=\"detect\" checked=\"checked\" />;\r\n\t\t} else {\r\n\t\t\treturn <input type=\"radio\" name=\"choice\" value=\"detect\" />;\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderBlur = function() {\r\n\t\tif (radioOption === 'blur') {\r\n\t\t\treturn <input type=\"radio\" name=\"choice\" value=\"blur\" checked=\"checked\" />;\r\n\t\t} else {\r\n\t\t\treturn <input type=\"radio\" name=\"choice\" value=\"blur\" />;\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderPitch = function() {\r\n\t\tif (radioOption === 'pitch') {\r\n\t\t\treturn <input type=\"radio\" name=\"choice\" value=\"pitch\" checked=\"checked\" />;\r\n\t\t} else {\r\n\t\t\treturn <input type=\"radio\" name=\"choice\" value=\"pitch\" />;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className=\"Faceblur\">\r\n\t\t\t<section className=\"Faceblur__options\">\r\n\t\t\t\t{/* <h1>https://i.ytimg.com/vi/L4Z-pXRHQVA/maxresdefault.jpg</h1> */}\r\n\r\n\t\t\t\t<h3 className=\"Faceblur__instruction--header\">\r\n\t\t\t\t\tEnter A Valid IMG URL{' '}\r\n\t\t\t\t\t<span role=\"img\" aria-label=\"emoji\">\r\n\t\t\t\t\t\t&#128513;\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t<form className=\"Faceblur__form\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div className=\"Faceblur__form__input-query\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tclassName=\"input-field\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter An Image URL :3\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"input-button\">\r\n\t\t\t\t\t\t\tSubmit &rarr;\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* YOU SHOULD CHANGE THIS SO THAT IT CHANGES STATE ON BUTTON CHANGE, NOT SUBMISSION! */}\r\n\t\t\t\t\t<div className=\"Faceblur__form__radio-buttons\" id=\"radio-group\">\r\n\t\t\t\t\t\t{renderDetect()}\r\n\t\t\t\t\t\t<label className=\"radio-label__detect\">DETECT</label>\r\n\t\t\t\t\t\t{renderBlur()}\r\n\t\t\t\t\t\t<label className=\"radio-label__blur\">BLUR</label>\r\n\t\t\t\t\t\t{renderPitch()}\r\n\t\t\t\t\t\t<label className=\"radio-label__pitch\">PITCH</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<h5 className=\"Faceblur__instruction--footer\">Hover + Click To Toggle | Export w/ Snipping Tool</h5>\r\n\t\t\t</section>\r\n\r\n\t\t\t<section className=\"Faceblur__display\">\r\n\t\t\t\t<div className=\"Faceblur__display--box\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={imageURL}\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\tclassName=\"Faceblur__display--image\"\r\n\t\t\t\t\t\tid=\"inputImage\"\r\n\t\t\t\t\t\t// style={{ filter: 'blur(.5rem)' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<BoundingBoxes boundingBoxes={boundingBoxes} />\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Faceblur;\r\n","import React from 'react';\r\nimport '../stylesheets/Footer.scss';\r\n\r\nconst Footer = function() {\r\n\treturn (\r\n\t\t<div className=\"Footer\">\r\n\t\t\t<a\r\n\t\t\t\thref=\"https://github.com/tenglin2/faceblur\"\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\tclassName=\"Footer__link\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"Footer__link--text\">Source Code Link</span>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","// export const changeSearchInput = function(input) {\r\n// \tconsole.log('input given', input);\r\n// \treturn {\r\n// \t\ttype: 'CHANGE_INPUT',\r\n// \t\tpayload: input\r\n// \t};\r\n// };\r\n\r\n// export const addTodo = function(item) {\r\n// \treturn {\r\n// \t\ttype: 'ADD_TODO',\r\n// \t\tpayload: item\r\n// \t};\r\n// };\r\n\r\n// export const changeName = function(name) {\r\n// \treturn {\r\n// \t\ttype: 'CHANGE_NAME',\r\n// \t\tpayload: name\r\n// \t};\r\n// };\r\n\r\nexport const handleInputChange = function(input) {\r\n\tconsole.log('on submit this should trigger');\r\n\treturn {\r\n\t\ttype: 'INPUT_CHANGE',\r\n\t\tpayload: input\r\n\t};\r\n};\r\n\r\nexport const registerNameChange = function(name) {\r\n\tconsole.log('name is', name);\r\n\treturn {\r\n\t\ttype: 'REGISTER_NAME_CHANGE',\r\n\t\tpayload: name\r\n\t};\r\n};\r\n\r\nexport const registerEmailChange = function(email) {\r\n\tconsole.log('emial is', email);\r\n\treturn {\r\n\t\ttype: 'REGISTER_EMAIL_CHANGE',\r\n\t\tpayload: email\r\n\t};\r\n};\r\n\r\nexport const registerPasswordChange = function(password) {\r\n\tconsole.log('password is', password);\r\n\treturn {\r\n\t\ttype: 'REGISTER_PASSWORD_CHANGE',\r\n\t\tpayload: password\r\n\t};\r\n};\r\n\r\n// export const clearRegisterQueries = function() {\r\n// \t// We just need to call the other actions with empty input...\r\n// \tregisterNameChange('');\r\n// \tregisterEmailChange('');\r\n// \tregisterPasswordChange('');\r\n// };\r\n\r\n// We need to update image url\r\nexport const changeImageURL = function(imageURL) {\r\n\tconsole.log(`the image url that the action takes is ${imageURL}`);\r\n\t// Return an action that is dispatch to the reducer.\r\n\r\n\treturn {\r\n\t\ttype: 'CHANGE_IMAGE_URL',\r\n\t\tpayload: imageURL\r\n\t};\r\n};\r\n\r\nexport const changeFaceData = function(faceData) {\r\n\t// Remember that we expect the face data to be an array of objects where each object defines a different face detected. There is also a length property we can use to iterate through each face.\r\n\r\n\treturn {\r\n\t\ttype: 'CHANGE_FACE_DATA',\r\n\t\tpayload: faceData\r\n\t};\r\n};\r\n\r\nexport const changeImageDimensions = function(imageDimensions) {\r\n\treturn {\r\n\t\ttype: 'CHANGE_IMAGE_DIMENSIONS',\r\n\t\tpayload: imageDimensions\r\n\t};\r\n};\r\n\r\nexport const changeRadioOption = function(radioOption) {\r\n\treturn {\r\n\t\ttype: 'CHANGE_RADIO_OPTION',\r\n\t\tpayload: radioOption\r\n\t};\r\n};\r\n","// import React from 'react';\r\n// import { HashRouter as Router, Route } from 'react-router-dom';\r\n// import '../stylesheets/App.css';\r\n\r\n// import Navbar from './Navbar';\r\n// import Home from './Home';\r\n// import Register from './Register';\r\n// import Signin from './Signin';\r\n// import Faceblur from './Faceblur';\r\n// import Footer from './Footer';\r\n// import '../stylesheets/App.css';\r\n\r\n// class App extends React.Component {\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<Router basename=\"/\">\r\n// \t\t\t\t<div class=\"app\">\r\n// \t\t\t\t\t{/* <h1 class=\"app__header\">THIS IS SOME HEADER TEXT</h1>\r\n// \t\t\t\t\t<h2>THIS TEXT SHOULD BE H1 AND WHITE</h2> */}\r\n// \t\t\t\t\t<Navbar />\r\n\r\n// \t\t\t\t\t<Route exact={true} path=\"/\" component={Home} />\r\n// \t\t\t\t\t<Route exact={true} path=\"/register\" component={Register} />\r\n// \t\t\t\t\t<Route exact={true} path=\"/signin\" component={Signin} />\r\n// \t\t\t\t\t{/* the faceblur component needs to be a protected route based on register state. For now just render like the rest. */}\r\n// \t\t\t\t\t<Route exact={true} path=\"/faceblur\" component={Faceblur} />\r\n\r\n// \t\t\t\t\t<Footer />\r\n// \t\t\t\t</div>\r\n// \t\t\t</Router>\r\n// \t\t);\r\n// \t}\r\n// }\r\n\r\n// export default App;\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport Faceblur from './Faceblur';\r\nimport Footer from './Footer';\r\n\r\nimport '../stylesheets/App.scss';\r\n\r\nimport Clarifai from 'clarifai';\r\nimport API_KEY from '../credentials';\r\n\r\nimport { handleInputChange } from '../actions/actions';\r\nimport { registerNameChange, registerEmailChange, registerPasswordChange } from '../actions/actions';\r\n\r\n// For changing the image url on submission...\r\nimport { changeImageURL } from '../actions/actions';\r\n\r\n// For getting the data from the clarifai api on submit...\r\nimport { changeFaceData } from '../actions/actions';\r\n\r\n// For changing the image dimensions and attach to state.\r\nimport { changeImageDimensions } from '../actions/actions';\r\n\r\n// Action used for changing the radio button selection state to detect, blur, or pitch.\r\nimport { changeRadioOption } from '../actions/actions';\r\n\r\nconst app = new Clarifai.App({\r\n\tapiKey: API_KEY\r\n});\r\n\r\nconst App = function() {\r\n\t// So here we get a reference to the dispatch function which accepts an action creator. THen we invoke it with the changeName action. This should return an action with a type a payload to the action reducer (and all other reducers). That should update state. And it works. Good!\r\n\t// It seems that this step is necessary for some reason. Probably something to do with asynchronous actions.\r\n\t// For now we don't need any logic. Just do the front end stuff. Reference the\r\n\tconst dispatch = useDispatch();\r\n\t// dispatch(changeName('gordon'));\r\n\t// const name = useSelector((state) => state.name);\r\n\t// console.log(name);\r\n\r\n\tconst input = useSelector((state) => state.input);\r\n\r\n\t// const imageURL = useSelector((state) => state.imageURL);\r\n\r\n\t// Extrapolated the form and input handlers to the parent top level component and passed them down as props instead.\r\n\tconst handleSubmit = function(event) {\r\n\t\t// YOU NEED A SEPARATE STATE FOR IMAGE URL. TYING IT STRICTLY TO INPUT IS NO GOOD!!!\r\n\r\n\t\tevent.preventDefault();\r\n\t\tconsole.log('submission works.');\r\n\t\tconsole.log(`current input value is ${input}`);\r\n\t\t// Add the dispatch with the input state at the current moment of submission.\r\n\t\tdispatch(changeImageURL(input));\r\n\r\n\t\t// Super weird here. The imageURL is actually undefined for some reason.\r\n\t\t// console.log(`the actual imageURL is assigned to input of ${imageURL}`);\r\n\t\t// console.log(imageURL);\r\n\r\n\t\t// Another weird part is that we needed to use input instead of the taken imageURL because it's just not defined I guess? Some error.\r\n\t\tapp.models.predict(Clarifai.FACE_DETECT_MODEL, input).then(\r\n\t\t\tfunction(response) {\r\n\t\t\t\t// Here we also need to set the response data as state to pass down to the faceblur component so that it knows the bounding boxes. Call it faceData.\r\n\t\t\t\tconsole.log(response.outputs[0].data.regions);\r\n\t\t\t\tconst formattedFaceData = response.outputs[0].data.regions;\r\n\t\t\t\tdispatch(changeFaceData(formattedFaceData));\r\n\r\n\t\t\t\t// We also want to clear the input on successful submit. That being said, we don't really want to create a new value, we only want to edit one. That means we use the same reducer and action.\r\n\r\n\t\t\t\t// For now instead of removing it after submission, let's just leave it.\r\n\t\t\t\t// dispatch(handleInputChange(''));\r\n\r\n\t\t\t\t// So I want to grab the image by id. The problem here might be that the image is currently undefined during response.\r\n\r\n\t\t\t\tconst image = document.getElementById('inputImage');\r\n\t\t\t\tconst imageDimensions = {\r\n\t\t\t\t\theight: image.height,\r\n\t\t\t\t\twidth: image.width\r\n\t\t\t\t};\r\n\t\t\t\t// console.log(image);\r\n\t\t\t\t// console.log(`the height is ${image.height} and width is ${image.width}`);\r\n\r\n\t\t\t\tdispatch(changeImageDimensions(imageDimensions));\r\n\t\t\t},\r\n\t\t\tfunction(error) {\r\n\t\t\t\tconsole.log('we have an error...');\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconsole.log('FLAAAGGGGGAGGAGAG: we need to find the radio button value, I believe is named choice');\r\n\t\t// So instead of going throught he event target, we just use dom manipulation, but we have to attach an id to the wrapper div.\r\n\t\tconst radios = document.querySelector('input[name=\"choice\"]:checked').value;\r\n\t\tconsole.log(radios);\r\n\t\tdispatch(changeRadioOption(radios));\r\n\t};\r\n\r\n\tconst handleChange = function(event) {\r\n\t\tconsole.log('updates the input value');\r\n\t\tdispatch(handleInputChange(event.target.value));\r\n\t};\r\n\r\n\t// CODE FOR REGISTER PAGE\r\n\tconst handleRegisterSubmit = function(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconsole.log('register submission triggers');\r\n\t\tclearRegisterQueries();\r\n\t};\r\n\r\n\tconst handleRegisterNameChange = function(event) {\r\n\t\tconsole.log('register name change');\r\n\t\tdispatch(registerNameChange(event.target.value));\r\n\t};\r\n\r\n\tconst handleRegisterEmailChange = function(event) {\r\n\t\tconsole.log('register email change');\r\n\t\tdispatch(registerEmailChange(event.target.value));\r\n\t};\r\n\r\n\tconst handleRegisterPasswordChange = function(event) {\r\n\t\tconsole.log('register password change');\r\n\t\tdispatch(registerPasswordChange(event.target.value));\r\n\t};\r\n\r\n\tconst clearRegisterQueries = function() {\r\n\t\tdispatch(registerNameChange(''));\r\n\t\tdispatch(registerEmailChange(''));\r\n\t\tdispatch(registerPasswordChange(''));\r\n\t};\r\n\r\n\t// The best thing to do here is get the image height and width and assign it to state. To do that, we would need a reducer and on successful submission on clarifai, we want to find the dimensions. The formal way is probably with react refs but dom manipulation is probably easier.\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t{/* <h1>Some value of {faceData.length}</h1> */}\r\n\r\n\t\t\t\t{/* <h1>The current input value is {input}</h1> */}\r\n\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t{/* Or operator here to make no change and Home have the same component render. */}\r\n\t\t\t\t<Route exact={true} path=\"/(|Home)\" component={Home} />\r\n\t\t\t\t<Route exact={true} path=\"/About\" component={About} />\r\n\t\t\t\t{/* Register and SignIn need to be protected based off of logged in state. */}\r\n\t\t\t\t{/* <Route exact={true} path=\"/Register\" component={Register} /> */}\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact={true}\r\n\t\t\t\t\tpath=\"/Register\"\r\n\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t<Register\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\thandleRegisterSubmit={handleRegisterSubmit}\r\n\t\t\t\t\t\t\thandleRegisterNameChange={handleRegisterNameChange}\r\n\t\t\t\t\t\t\thandleRegisterEmailChange={handleRegisterEmailChange}\r\n\t\t\t\t\t\t\thandleRegisterPasswordChange={handleRegisterPasswordChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route exact={true} path=\"/Login\" component={Login} />\r\n\t\t\t\t{/* <Route exact={true} path=\"/faceblur\" component={Faceblur} /> */}\r\n\r\n\t\t\t\t{/* So this part here we wanted to pass props to our component so we had to use render instead of component and pass the props that way. Kind of weird. */}\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact={true}\r\n\t\t\t\t\tpath=\"/Faceblur\"\r\n\t\t\t\t\trender={(props) => <Faceblur {...props} handleSubmit={handleSubmit} handleChange={handleChange} />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const countReducer = function(state = 0, action) {\r\n\treturn state;\r\n};\r\n\r\nexport default countReducer;\r\n","const nameReducer = function(state = 'george', action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE_NAME':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default nameReducer;\r\n","const inputReducer = function(state = 'https://i.ytimg.com/vi/L4Z-pXRHQVA/maxresdefault.jpg', action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'INPUT_CHANGE':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default inputReducer;\r\n","const registerNameReducer = function(state = '', action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'REGISTER_NAME_CHANGE':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default registerNameReducer;\r\n","const registerEmailReducer = function(state = '', action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'REGISTER_EMAIL_CHANGE':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default registerEmailReducer;\r\n","const registerPasswordReducer = function(state = '', action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'REGISTER_PASSWORD_CHANGE':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default registerPasswordReducer;\r\n","const imageURLReducer = function(state = '', action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE_IMAGE_URL':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default imageURLReducer;\r\n","const faceDataReducer = function(state = [], action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE_FACE_DATA':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default faceDataReducer;\r\n\r\n// This individual reducer stuff is tedioius but remember that if you want one huge reducer, you have to return it as an object and spread it. Actually kind of impractical because you have to name the parent and use the dot operator to get each value. The advantageous is that you don't have to do this tedious coding.\r\n","const imageDimensionsReducer = function(state = {}, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE_IMAGE_DIMENSIONS':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default imageDimensionsReducer;\r\n","const radioOptionReducer = function(state = 'detect', action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE_RADIO_OPTION':\r\n\t\t\treturn action.payload;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default radioOptionReducer;\r\n","import { combineReducers } from 'redux';\r\nimport countReducer from './countReducer';\r\nimport nameReducer from './nameReducer';\r\nimport inputReducer from './inputReducer';\r\n\r\nimport registerNameReducer from './registerNameReducer';\r\nimport registerEmailReducer from './registerEmailReducer';\r\nimport registerPasswordReducer from './registerPasswordReducer';\r\n\r\nimport imageURLReducer from './imageURLReducer';\r\nimport faceDataReducer from './faceDataReducer';\r\nimport imageDimensionsReducer from './imageDimensionsReducer';\r\n\r\nimport radioOptionReducer from './radioOptionReducer';\r\n\r\n// So these are our state values and we name it right here.\r\nconst rootReducer = combineReducers({\r\n\tcount: countReducer,\r\n\tname: nameReducer,\r\n\tinput: inputReducer,\r\n\tregisterName: registerNameReducer,\r\n\tregisterEmail: registerEmailReducer,\r\n\tregisterPassword: registerPasswordReducer,\r\n\timageURL: imageURLReducer,\r\n\tfaceData: faceDataReducer,\r\n\timageDimensions: imageDimensionsReducer,\r\n\tradioOption: radioOptionReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n","const API_KEY = 'a3a79f1b2f5242c3b881a5fe456f94e6';\r\n\r\nmodule.exports = API_KEY;\r\n"],"sourceRoot":""}